import keras
import tensorflow as tf
import numpy as np
from tensorflow.keras import regularizers
from tensorflow.keras.models import Sequential, Model
from tensorflow.keras.layers import Input, Conv2D, ReLU, BatchNormalization, Add, AveragePooling2D, Flatten, Dense, MaxPooling2D, Dropout, Concatenate, Average, ZeroPadding2D
import pickle
import matplotlib.pyplot as plt
from imgclasslib.model.inception_resnetv2.inception import *

def create_inception_resnetv2(IMG_SIZE,num_categories=4):
    inputs = Input(shape=(IMG_SIZE,IMG_SIZE,3))
    x = Conv2D(kernel_size=3,strides=2,filters=32,padding='same')(inputs)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = Conv2D(kernel_size=3,strides=1,filters=32,padding='same')(inputs)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = Conv2D(kernel_size=3,strides=1,filters=64,padding='same')(inputs)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = MaxPooling2D(pool_size=3,strides=2,padding='same')(x)
    x = Conv2D(kernel_size=1,strides=1,filters=80,padding='same')(inputs)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = Conv2D(kernel_size=3,strides=1,filters=192,padding='same')(inputs)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = MaxPooling2D(pool_size=3,strides=2,padding='same')(x)
    
    #inception1
    x = Inception1(x,[1,(1,5),(1,3,3),1],[1,(1,1),(1,1,1),1],[96,(48,64),(64,96,96),64])
    #inception1b
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x1 = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x1 = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x1 = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception1b(x,[1,(1,3),(1,3,3)],[1,(1,1),(1,1,1)],[32,(32,32),(32,48,64)])
    x = Conv2D(kernel_size=1,strides=1,filters=320,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    
    #inception2
    x = Inception2(x,[3,(1,3,3)],[2,(1,1,2)],[384,(256,256,384)])
    #inception2b
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,7),(7,1))],[1,(1,1,1)],[192,(128,160,192)])
    x = Conv2D(kernel_size=1,strides=1,filters=1088,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    
    #inception3a
    x = Inception3a(x,[(1,3),(1,3),(1,3,3)],[(1,2),(1,2),(1,1,2)],[(256,384),(256,288),(256,288,320)])
    
    #inception2b
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    x1 = Inception2b(x,[1,(1,(1,3),(3,1))],[1,(1,1,1)],[192,(192,224,256)])
    x = Conv2D(kernel_size=1,strides=1,filters=2080,padding='same')(x)
    x = Add()([x,x1])
    x = ReLU()(x)
    
    x = Conv2D(kernel_size=1,strides=1,filters=1536,padding='same')(x)
    x = BatchNormalization()(x)
    x = ReLU()(x)
    x = AveragePooling2D()(x)
    x = Flatten()(x)
    outputs = Dense(num_categories,activation='softmax')(x)
    model = Model(inputs,outputs)
    model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])
    return model
